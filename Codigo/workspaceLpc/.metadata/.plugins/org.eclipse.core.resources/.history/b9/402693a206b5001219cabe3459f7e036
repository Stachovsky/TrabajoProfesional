/*
 * LcdGrafic_Grafic.h
 *
 *  Created on: Oct 17, 2012
 *      Author: "Facundo Nahuel Uriel Silva"
 */

#ifndef LcdGrafic_GRAFIC_H_
#define LcdGrafic_GRAFIC_H_

#include "LPC17xx.h"
#include <string.h>

///////////////////////////////////////
// Parametrizacion de las GPIO
///////////////////////////////////////

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

#define		PIN_DI
#define		PORT_DI

///////////////////////////////////////
///////////////////////////////////////


/** Se deben encender las dos memoria: Llamar a la funcion display on/off por cada chip
 * 	Chip Select: Se puede seleccionar las dos columnas enciendiedo los dos CS o por separado. Para el clea
 *
 *
 */

#define DELAY		30
#define DELAY_LONG	50
#define MAX_X		8
#define MAX_Y		128

#define		PIN_DI	0
#define		PIN_RW	1
#define		PIN_E	2
#define		PIN_CS1	3
#define		PIN_CS2	4
#define		PIN_RST	5

typedef struct{
	int8_t port;
	int8_t bit;
} LCD_DB;

/** \brief
 *
 */
void LcdGrafic_Init();

/** \brief
 * Se deben hacer dos lecturas consecutivas para obtener el valor de la RAM
 *
 * @param data
 * @param command
 * @param page
 */
void LcdGrafic_Read(int8_t* data, int8_t command, uint8_t page);

void LcdGrafic_Write(int8_t data, uint8_t command, uint8_t page);

void LcdGrafic_WriteData(int8_t data, uint8_t page);

void LcdGrafic_WriteInstruction(int8_t data, uint8_t page);

void LcdGrafic_WriteByteXY(int8_t data, uint8_t x, uint8_t y);

void LcdGrafic_ReadByte(int8_t* data, uint8_t x, uint8_t y);

void LcdGrafic_GotoXY(int8_t x, int8_t y);

void LcdGrafic_CleanScreen();

void LcdGrafic_DisplayON();

void LcdGrafic_DisplayOFF();

void LcdGrafic_SetPixel(int8_t x, int8_t y);

void LcdGrafic_UnSetPixel(int8_t x, int8_t y);

void LcdGrafic_WriteBlock(int8_t* block,int8_t x, int8_t y, int16_t width, int8_t height);

void LcdGrafic_WriteBuffer(uint8_t* data);

//tux
//int8_t row0[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//int8_t row1[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0x98, 0x84, 0x84, 0x83, 0x83, 0x82, 0x82, 0x83, 0x83, 0x83, 0x82, 0x86, 0xCE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xFC, 0xFC, 0x9E, 0x86, 0x86, 0x82, 0x83, 0x83, 0x83, 0x82, 0x82, 0x83, 0x82, 0x84, 0x88, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//int8_t row2[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x6F, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8F, 0x6F, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//int8_t row3[] = {0x00, 0x00, 0x70, 0x68, 0x74, 0x3A, 0x3D, 0x1E, 0x1F, 0x0F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x1F, 0x1E, 0x3D, 0x3A, 0x74, 0x68, 0x70, 0x00, 0x00};
//int8_t row4[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x90, 0xE8, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x06, 0x08, 0x18, 0x3C, 0x7E, 0x5E, 0x2F, 0x17, 0x0B, 0x04, 0x03, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC8, 0x90, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//int8_t row5[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x80, 0x40, 0x44, 0x1C, 0x3E, 0x3F, 0x3C, 0x3E, 0x1F, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//int8_t row6[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0xFE, 0xFF, 0xE3, 0xF0, 0x78, 0x38, 0x38, 0x18, 0x18, 0x18, 0x18, 0x38, 0x38, 0x70, 0xF0, 0xF8, 0x1C, 0x0E, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x0E, 0x1E, 0xFC, 0xF9, 0xFF, 0xFF, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
//int8_t row7[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x10, 0x08, 0x0C, 0x04, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


#endif /* LcdGrafic_GRAFIC_H_ */
