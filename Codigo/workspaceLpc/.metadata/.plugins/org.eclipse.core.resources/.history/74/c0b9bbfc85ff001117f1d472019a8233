/*
 * API_Uart.c
 *
 *  Created on: 30/04/2012
 *      Author: Facundo Nahuel Uriel Silva
 */

#include "API_Uart.h"

uart_port control_uarts[4];

void API_Uart_Config(uart_port portNumber){

	control_uarts[0].port = LPC_UART0;
	control_uarts[1].port = LPC_UART1;
	control_uarts[2].port = LPC_UART2;
	control_uarts[3].port = LPC_UART3;

	//-----------------------------------------------
	// Configuracion de los pines para usar la UART3
	//-----------------------------------------------


	control_uarts[portNumber].pin.Funcnum = PINSEL_FUNC_2;
	control_uarts[portNumber].pin.OpenDrain = PINSEL_PINMODE_NORMAL;
	control_uarts[portNumber].pin.Pinmode = PINSEL_PINMODE_PULLUP;
	control_uarts[portNumber].pin.Pinnum = PINSEL_PIN_0; //TXD3
	control_uarts[portNumber].pin.Portnum = PINSEL_PORT_0;

	PINSEL_ConfigPin(&control_uarts[portNumber].pin);

	control_uarts[portNumber].pin.Pinnum = PINSEL_PIN_1;

	PINSEL_ConfigPin(&control_uarts[3].pin); //RXD3

	//-----------------------------------------------
	// Configuracion de la UART3
	//-----------------------------------------------

	control_uarts[portNumber].config.Baud_rate = 115200;
	control_uarts[portNumber].config.Databits = UART_DATABIT_8;
	control_uarts[portNumber].config.Parity = UART_PARITY_NONE;
	control_uarts[portNumber].config.Stopbits = UART_STOPBIT_1;

	UART_Init(LPC_UART3,&control_uarts[3].config);
	UART_TxCmd(LPC_UART3, ENABLE);

	UART_IntConfig(LPC_UART3, UART_INTCFG_RBR, ENABLE); // Se activa la interrupcion de RXD
	NVIC_EnableIRQ(UART3_IRQn);
}

void API_UartSendString(char* str){

	UART_SendString(LPC_UART3,(uint8_t*)str);
}

void API_UartSendByte(uint8_t byte){

	UART_SendByte(LPC_UART3,byte);
}


//void UART3_IRQHandler(void){
//
////	char c = UART_ReceiveByte(LPC_UART3);
//
////	switch(c){
////	case 'R':
////		LPC_GPIO2->FIOSET = (1<<0); //red on
////		break;
////	case 'r':
////		LPC_GPIO2->FIOCLR = (1<<0); //red off
////		break;
////	case 'B':
////		LPC_GPIO0->FIOSET = (1<<26); //blue on
////		break;
////	case 'b':
////		LPC_GPIO0->FIOCLR = (1<<26); //blue off
////		break;
////	case 'G':
////		LPC_GPIO2->FIOSET = (1<<1); //green on
////		break;
////	case 'g':
////		LPC_GPIO2->FIOCLR = (1<<1); //green off
////		break;
////	}
//}
